"""
This type stub file was generated by pyright.
"""

from typing import Any, Final
from typing import Literal as L
from typing import TypeVar, overload

from numpy import complexfloating, generic, integer
from numpy._typing import _ArrayLike  # type: ignore
from numpy._typing import _ArrayLikeComplex_co  # type: ignore
from numpy._typing import _ArrayLikeFloat_co  # type: ignore
from numpy._typing import _ShapeLike  # type: ignore
from numpy._typing import ArrayLike, NDArray

__all__ = ["fftfreq", "fftshift", "ifftshift", "rfftfreq"]
_SCT = TypeVar("_SCT", bound=generic)
integer_types: Final[tuple[type[int], type[integer]]] = ...

@overload
def fftshift(x: _ArrayLike[_SCT], axes: _ShapeLike | None = ...) -> NDArray[_SCT]: ...
@overload
def fftshift(x: ArrayLike, axes: _ShapeLike | None = ...) -> NDArray[Any]: ...
@overload
def ifftshift(x: _ArrayLike[_SCT], axes: _ShapeLike | None = ...) -> NDArray[_SCT]: ...
@overload
def ifftshift(x: ArrayLike, axes: _ShapeLike | None = ...) -> NDArray[Any]: ...
def fftfreq(
    n: int | integer,
    d: _ArrayLikeFloat_co | _ArrayLikeComplex_co = ...,
    device: L["cpu"] | None = ...,
) -> NDArray[Any]: ...
def rfftfreq(
    n: int | integer, d: _ArrayLikeComplex_co = ..., device: L["cpu"] | None = ...
) -> NDArray[complexfloating]: ...
