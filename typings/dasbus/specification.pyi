"""
This type stub file was generated by pyright and updated for dasbus.specification.
"""

from typing import Any

from dasbus.xml import XMLParser

__all__ = ["DBusSpecificationError", "DBusSpecification", "DBusSpecificationParser"]

class DBusSpecificationError(Exception):
    """Exception for the DBus specification errors."""

    ...

class DBusSpecification:
    """DBus XML specification."""

    DIRECTION_IN: str
    DIRECTION_OUT: str
    ACCESS_READ: str
    ACCESS_WRITE: str
    ACCESS_READWRITE: str
    RETURN_PARAMETER: str
    STANDARD_INTERFACES: str

    Signal: Any
    Method: Any
    Property: Any

    __slots__ = ["_members"]

    @classmethod
    def from_xml(cls, xml: str) -> "DBusSpecification": ...
    def __init__(self) -> None: ...
    @property
    def interfaces(self) -> list[Any]: ...
    @property
    def members(self) -> list[Any]: ...
    def add_member(self, member: Any) -> None: ...
    def get_member(self, interface_name: str, member_name: str) -> Any: ...

class DBusSpecificationParser:
    """Class for parsing DBus XML specification."""

    xml_parser: type[XMLParser]

    @classmethod
    def parse_specification(
        cls, xml: str, factory: type = ...
    ) -> DBusSpecification: ...
